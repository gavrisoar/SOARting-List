"""

"""


import phantom.rules as phantom
import json
from datetime import datetime, timedelta


@phantom.playbook_block()
def on_start(container):
    phantom.debug('on_start() called')

    # call 'filter_1' block
    filter_1(container=container)

    return

@phantom.playbook_block()
def filter_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("filter_1() called")

    # collect filtered artifact ids and results for 'if' condition 1
    matched_artifacts_1, matched_results_1 = phantom.condition(
        container=container,
        conditions=[
            ["artifact:*.cef.emailHeaders.Subject", "!=", ""]
        ],
        name="filter_1:condition_1",
        delimiter=None)

    # call connected blocks if filtered artifacts or results
    if matched_artifacts_1 or matched_results_1:
        finding_key_comparator(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)

    return


@phantom.playbook_block()
def soarting_code(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("soarting_code() called")

    finding_key_comparator__dictionary_key = json.loads(_ if (_ := phantom.get_run_data(key="finding_key_comparator:dictionary_key")) != "" else "null")  # pylint: disable=used-before-assignment

    soarting_code__label_name = None

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...
    label_dict = {'gavris email test': 'gavris_test', 'gavris email the second': 'second_email_label', 'gavris email the third': 'third_email_label'}
    email_subject_name = finding_key_comparator__dictionary_key
    soarting_code__label_name = label_dict.get(email_subject_name, "no_sort")

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.save_run_data(key="soarting_code:label_name", value=json.dumps(soarting_code__label_name))

    container_update_6(container=container)
    debug_3(container=container)

    return


@phantom.playbook_block()
def container_update_6(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("container_update_6() called")

    id_value = container.get("id", None)
    soarting_code__label_name = json.loads(_ if (_ := phantom.get_run_data(key="soarting_code:label_name")) != "" else "null")  # pylint: disable=used-before-assignment

    parameters = []

    parameters.append({
        "name": None,
        "tags": None,
        "label": soarting_code__label_name,
        "owner": None,
        "status": None,
        "severity": None,
        "input_json": None,
        "description": None,
        "sensitivity": None,
        "container_input": id_value,
    })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.custom_function(custom_function="community/container_update", parameters=parameters, name="container_update_6", callback=format_comment)

    return


@phantom.playbook_block()
def add_comment_7(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("add_comment_7() called")

    format_comment = phantom.get_format_data(name="format_comment")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.comment(container=container, comment=format_comment)

    return


@phantom.playbook_block()
def format_comment(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("format_comment() called")

    template = """container {0} has been updated to label \"{1}\"\n"""

    # parameter list for template variable replacement
    parameters = [
        "container:id",
        "soarting_code:custom_function:label_name"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="format_comment")

    add_comment_7(container=container)

    return


@phantom.playbook_block()
def debug_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("debug_3() called")

    container_artifact_data = phantom.collect2(container=container, datapath=["artifact:*.cef.emailHeaders.Subject","artifact:*.id"])
    finding_key_comparator__dictionary_key = json.loads(_ if (_ := phantom.get_run_data(key="finding_key_comparator:dictionary_key")) != "" else "null")  # pylint: disable=used-before-assignment
    soarting_code__label_name = json.loads(_ if (_ := phantom.get_run_data(key="soarting_code:label_name")) != "" else "null")  # pylint: disable=used-before-assignment

    container_artifact_cef_item_0 = [item[0] for item in container_artifact_data]

    parameters = []

    parameters.append({
        "input_1": container_artifact_cef_item_0,
        "input_2": finding_key_comparator__dictionary_key,
        "input_3": soarting_code__label_name,
        "input_4": None,
        "input_5": None,
        "input_6": None,
        "input_7": None,
        "input_8": None,
        "input_9": None,
        "input_10": None,
    })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.custom_function(custom_function="community/debug", parameters=parameters, name="debug_3")

    return


@phantom.playbook_block()
def finding_key_comparator(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("finding_key_comparator() called")

    container_artifact_data = phantom.collect2(container=container, datapath=["artifact:*.cef.emailHeaders.Subject"])

    container_artifact_cef_item_0 = [item[0] for item in container_artifact_data]

    finding_key_comparator__dictionary_key = None

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...
    keys_original = ['Gavris Email Test', 'Gavris Email The Second', 'Gavris Email The Third']
    keys = [lowercase.lower() for lowercase in keys_original]
    no_key_seen = "no_key_seen_no_sort"
    list_to_string = ""
    
    list_to_string = list_to_string.join(container_artifact_cef_item_0).lower()
    
    #phantom.debug("--------------")
    #phantom.debug(list_to_string)
    #phantom.debug("--------------")              
    
    for key in keys:
        
        phantom.debug("--------------")
        phantom.debug(key)
        phantom.debug(list_to_string)
        phantom.debug("--------------")
        
        if key in list_to_string:
            finding_key_comparator__dictionary_key = key
            break
        else:
            finding_key_comparator__dictionary_key = no_key_seen
            

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.save_run_data(key="finding_key_comparator:dictionary_key", value=json.dumps(finding_key_comparator__dictionary_key))

    soarting_code(container=container)

    return


@phantom.playbook_block()
def on_finish(container, summary):
    phantom.debug("on_finish() called")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    return
